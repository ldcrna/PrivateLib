apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.ldcrna'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.annotation:annotation:1.1.0'
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    implementation 'com.github.bumptech.glide:glide:4.5.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.ldcrna'
            //You can either define these here or get them from project conf elsewhere
            artifactId 'PrivateLib'
            version '1.5.0'
            artifact "$buildDir/outputs/aar/HuanLib-release.aar"
            //aar artifact you want to publish //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each { dependency ->
                    if (!"unspecified".equals(dependenciesNode.name)) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    } //publish to filesystem repo
    repositories { maven { url "$buildDir/repo" } }
}

apply plugin: 'checkstyle'
checkstyle{
    toolVersion "8.7"
}
task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/test/**'
    exclude '**/androidTest/**'
    configFile new File(rootDir, "checkstyle.xml")
    classpath = files()
}

preBuild.dependsOn('checkstyle')
check.dependsOn('checkstyle')

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}